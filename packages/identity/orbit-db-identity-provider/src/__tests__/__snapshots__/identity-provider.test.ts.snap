// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Identity Provider create an identity with saved keys has the correct public key: identity 1`] = `
Identity {
  "_id": Uint8Array [
    114,
    191,
    149,
    238,
    24,
    85,
    171,
    66,
    166,
    244,
    151,
    61,
    90,
    170,
    64,
    67,
    207,
    141,
    89,
    233,
    118,
    19,
    198,
    75,
    221,
    214,
    49,
    112,
    99,
    139,
    10,
    215,
  ],
  "_provider": Identities {
    "_keystore": Keystore {
      "_cache": LRU {
        "_events": Object {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "cache": Object {
          "_/sign/aWQ=": Object {
            "modified": 0,
            "next": null,
            "prev": "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=",
            "value": KeyWithMeta<Ed25519Keypair> {
              "group": "_",
              "publicKey": Ed25519PublicKey {
                "keyType": "ed25519",
                "publicKey": true,
              },
              "secretKey": Ed25519PrivateKey {
                "keyType": "ed25519",
                "publicKey": false,
              },
              "timestamp": 1661031250789,
            },
          },
          "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=": Object {
            "modified": 0,
            "next": "_/sign/aWQ=",
            "prev": null,
            "value": KeyWithMeta<Ed25519Keypair> {
              "group": "_",
              "publicKey": Ed25519PublicKey {
                "keyType": "ed25519",
                "publicKey": true,
              },
              "secretKey": Ed25519PrivateKey {
                "keyType": "ed25519",
                "publicKey": false,
              },
              "timestamp": 1661031250848,
            },
          },
        },
        "head": "_/sign/aWQ=",
        "length": 2,
        "max": 100,
        "maxAge": 0,
        "tail": "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=",
        Symbol(kCapture): false,
      },
      "_store": ClassicLevel {
        "_events": Object {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "supports": Object {
          "additionalMethods": Object {
            "approximateSize": true,
            "compactRange": true,
          },
          "clear": true,
          "createIfMissing": true,
          "deferredOpen": true,
          "encodings": Object {
            "base64": true,
            "buffer": true,
            "hex": true,
            "json": true,
            "utf8": true,
            "view": true,
          },
          "errorIfExists": true,
          "events": Object {
            "batch": true,
            "clear": true,
            "closed": true,
            "closing": true,
            "del": true,
            "open": true,
            "opening": true,
            "put": true,
          },
          "getMany": true,
          "iteratorAll": true,
          "iteratorNextv": true,
          "keyIterator": true,
          "permanence": true,
          "promises": true,
          "seek": true,
          "snapshots": true,
          "status": true,
          "streams": false,
          "valueIterator": true,
        },
        Symbol(kCapture): false,
        Symbol(resources): Set {},
        Symbol(operations): Array [],
        Symbol(deferOpen): false,
        Symbol(options): Object {},
        Symbol(status): "open",
        Symbol(transcoder): Transcoder {
          Symbol(encodings): Map {
            "utf8" => UTF8Format {
              "createBufferTranscoder": [Function],
              "createViewTranscoder": [Function],
              "decode": [Function],
              "encode": [Function],
              "format": "utf8",
              "name": "utf8",
            },
            "json" => UTF8Format {
              "decode": [Function],
              "encode": [Function],
              "format": "utf8",
              "name": "json",
            },
            "buffer" => BufferFormat {
              "createViewTranscoder": [Function],
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "buffer",
            },
            "view" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "view+buffer",
            },
            "view+buffer" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "view+buffer",
            },
            "hex" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "hex",
            },
            "base64" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "base64",
            },
          },
          Symbol(formats): Set {
            "buffer",
            "utf8",
          },
        },
        Symbol(keyEncoding): UTF8Format {
          "createBufferTranscoder": [Function],
          "createViewTranscoder": [Function],
          "decode": [Function],
          "encode": [Function],
          "format": "utf8",
          "name": "utf8",
        },
        Symbol(valueEncoding): BufferFormat {
          "decode": [Function],
          "encode": [Function],
          "format": "buffer",
          "name": "view+buffer",
        },
        Symbol(defaultOptions): Object {
          "empty": Object {},
          "entry": Object {
            "keyEncoding": "utf8",
            "valueEncoding": "view",
          },
          "key": Object {
            "keyEncoding": "utf8",
          },
        },
        Symbol(location): "/Users/admin/git/web3-orbit/packages/orbit-db-identity-provider/src/__tests__/fixtures/savedKeys",
        Symbol(context): Object {},
      },
    },
    "_knownIdentities": LRU {
      "_events": Object {},
      "_eventsCount": 0,
      "_maxListeners": undefined,
      "cache": Object {},
      "head": null,
      "length": 0,
      "max": 100,
      "maxAge": 0,
      "tail": null,
      Symbol(kCapture): false,
    },
    "_signingKeystore": Keystore {
      "_cache": LRU {
        "_events": Object {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "cache": Object {
          "_/sign/aWQ=": Object {
            "modified": 0,
            "next": null,
            "prev": "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=",
            "value": KeyWithMeta<Ed25519Keypair> {
              "group": "_",
              "publicKey": Ed25519PublicKey {
                "keyType": "ed25519",
                "publicKey": true,
              },
              "secretKey": Ed25519PrivateKey {
                "keyType": "ed25519",
                "publicKey": false,
              },
              "timestamp": 1661031250789,
            },
          },
          "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=": Object {
            "modified": 0,
            "next": "_/sign/aWQ=",
            "prev": null,
            "value": KeyWithMeta<Ed25519Keypair> {
              "group": "_",
              "publicKey": Ed25519PublicKey {
                "keyType": "ed25519",
                "publicKey": true,
              },
              "secretKey": Ed25519PrivateKey {
                "keyType": "ed25519",
                "publicKey": false,
              },
              "timestamp": 1661031250848,
            },
          },
        },
        "head": "_/sign/aWQ=",
        "length": 2,
        "max": 100,
        "maxAge": 0,
        "tail": "_/sign/cr+V7hhVq0Km9Jc9WqpAQ8+NWel2E8ZL3dYxcGOLCtc=",
        Symbol(kCapture): false,
      },
      "_store": ClassicLevel {
        "_events": Object {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "supports": Object {
          "additionalMethods": Object {
            "approximateSize": true,
            "compactRange": true,
          },
          "clear": true,
          "createIfMissing": true,
          "deferredOpen": true,
          "encodings": Object {
            "base64": true,
            "buffer": true,
            "hex": true,
            "json": true,
            "utf8": true,
            "view": true,
          },
          "errorIfExists": true,
          "events": Object {
            "batch": true,
            "clear": true,
            "closed": true,
            "closing": true,
            "del": true,
            "open": true,
            "opening": true,
            "put": true,
          },
          "getMany": true,
          "iteratorAll": true,
          "iteratorNextv": true,
          "keyIterator": true,
          "permanence": true,
          "promises": true,
          "seek": true,
          "snapshots": true,
          "status": true,
          "streams": false,
          "valueIterator": true,
        },
        Symbol(kCapture): false,
        Symbol(resources): Set {},
        Symbol(operations): Array [],
        Symbol(deferOpen): false,
        Symbol(options): Object {},
        Symbol(status): "open",
        Symbol(transcoder): Transcoder {
          Symbol(encodings): Map {
            "utf8" => UTF8Format {
              "createBufferTranscoder": [Function],
              "createViewTranscoder": [Function],
              "decode": [Function],
              "encode": [Function],
              "format": "utf8",
              "name": "utf8",
            },
            "json" => UTF8Format {
              "decode": [Function],
              "encode": [Function],
              "format": "utf8",
              "name": "json",
            },
            "buffer" => BufferFormat {
              "createViewTranscoder": [Function],
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "buffer",
            },
            "view" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "view+buffer",
            },
            "view+buffer" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "view+buffer",
            },
            "hex" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "hex",
            },
            "base64" => BufferFormat {
              "decode": [Function],
              "encode": [Function],
              "format": "buffer",
              "name": "base64",
            },
          },
          Symbol(formats): Set {
            "buffer",
            "utf8",
          },
        },
        Symbol(keyEncoding): UTF8Format {
          "createBufferTranscoder": [Function],
          "createViewTranscoder": [Function],
          "decode": [Function],
          "encode": [Function],
          "format": "utf8",
          "name": "utf8",
        },
        Symbol(valueEncoding): BufferFormat {
          "decode": [Function],
          "encode": [Function],
          "format": "buffer",
          "name": "view+buffer",
        },
        Symbol(defaultOptions): Object {
          "empty": Object {},
          "entry": Object {
            "keyEncoding": "utf8",
            "valueEncoding": "view",
          },
          "key": Object {
            "keyEncoding": "utf8",
          },
        },
        Symbol(location): "/Users/admin/git/web3-orbit/packages/orbit-db-identity-provider/src/__tests__/fixtures/savedKeys",
        Symbol(context): Object {},
      },
    },
  },
  "_publicKey": Ed25519PublicKey {
    "keyType": "ed25519",
    "publicKey": true,
  },
  "_signatures": Signatures {
    "id": Uint8Array [
      39,
      226,
      82,
      137,
      35,
      150,
      121,
      171,
      179,
      108,
      152,
      31,
      68,
      237,
      133,
      161,
      39,
      231,
      31,
      177,
      151,
      15,
      93,
      221,
      120,
      86,
      19,
      93,
      141,
      121,
      108,
      196,
      219,
      57,
      163,
      134,
      142,
      213,
      67,
      141,
      149,
      144,
      202,
      214,
      188,
      27,
      215,
      74,
      210,
      150,
      4,
      35,
      54,
      35,
      217,
      182,
      139,
      134,
      252,
      17,
      23,
      39,
      21,
      1,
      114,
      191,
      149,
      238,
      24,
      85,
      171,
      66,
      166,
      244,
      151,
      61,
      90,
      170,
      64,
      67,
      207,
      141,
      89,
      233,
      118,
      19,
      198,
      75,
      221,
      214,
      49,
      112,
      99,
      139,
      10,
      215,
    ],
    "publicKey": Uint8Array [
      44,
      163,
      178,
      168,
      238,
      155,
      15,
      121,
      244,
      23,
      232,
      160,
      114,
      238,
      195,
      17,
      17,
      211,
      168,
      176,
      205,
      160,
      51,
      202,
      51,
      154,
      216,
      245,
      55,
      131,
      227,
      57,
      124,
      216,
      10,
      42,
      139,
      225,
      56,
      114,
      209,
      144,
      252,
      71,
      227,
      87,
      198,
      181,
      198,
      228,
      226,
      25,
      24,
      52,
      216,
      0,
      239,
      101,
      59,
      61,
      62,
      117,
      206,
      15,
      205,
      159,
      222,
      39,
      249,
      254,
      163,
      205,
      202,
      147,
      156,
      216,
      82,
      64,
      56,
      58,
      184,
      186,
      25,
      138,
      140,
      83,
      170,
      82,
      104,
      11,
      129,
      222,
      250,
      39,
      34,
      251,
      39,
      226,
      82,
      137,
      35,
      150,
      121,
      171,
      179,
      108,
      152,
      31,
      68,
      237,
      133,
      161,
      39,
      231,
      31,
      177,
      151,
      15,
      93,
      221,
      120,
      86,
      19,
      93,
      141,
      121,
      108,
      196,
      219,
      57,
      163,
      134,
      142,
      213,
      67,
      141,
      149,
      144,
      202,
      214,
      188,
      27,
      215,
      74,
      210,
      150,
      4,
      35,
      54,
      35,
      217,
      182,
      139,
      134,
      252,
      17,
      23,
      39,
      21,
      1,
      114,
      191,
      149,
      238,
      24,
      85,
      171,
      66,
      166,
      244,
      151,
      61,
      90,
      170,
      64,
      67,
      207,
      141,
      89,
      233,
      118,
      19,
      198,
      75,
      221,
      214,
      49,
      112,
      99,
      139,
      10,
      215,
    ],
  },
  "_type": "orbitdb",
}
`;
